name: Deploy to AWS EC2

on:
  workflow_run:
    workflows: ["RunTests"]
    types: [completed]

jobs:
  deploy:
    runs-on: ubuntu-latest

    # Solo si los tests pasaron en main
    if: >
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.head_branch == 'main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Build WAR artifact
        run: mvn clean package -DskipTests

      - name: Extract version from commit message
        id: extract_version
        run: |
          MSG="${{ github.event.workflow_run.head_commit.message }}"
          VER=$(echo "$MSG" \
            | grep -oE 'v?[0-9]+\.[0-9]+\.[0-9]+(-[A-Za-z0-9\.]+)?' \
            | head -n1 \
            | sed 's/^v//')
          if [ -z "$VER" ]; then
            echo "::error::No se encontró versión en el mensaje del commit"
            exit 1
          fi
          echo "version=$VER" >> $GITHUB_OUTPUT

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/LaBoticaDeMar:${{ steps.extract_version.outputs.version }}
            ${{ secrets.DOCKERHUB_USERNAME }}/LaBoticaDeMar:latest

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add EC2 to known_hosts
        run: ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy on EC2
        run: |
          ssh -i ~/.ssh/id_rsa ec2-user@${{ secrets.EC2_HOST }} << 'EOF'
            # Detenemos y borramos el contenedor previo
            docker stop LaBoticaDeMar || true
            docker rm LaBoticaDeMar   || true

            # Tiramos la nueva imagen
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/LaBoticaDeMar:${{ steps.extract_version.outputs.version }}

            # Arrancamos con todas las vars que funcionan localmente
            docker run -d \
              --name LaBoticaDeMar \
              -p 80:8080 \
              -e SPRING_DATASOURCE_URL="jdbc:mysql://${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC" \
              -e SPRING_DATASOURCE_USERNAME=${{ secrets.DB_USER }} \
              -e SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e SPRING_JPA_HIBERNATE_DDL_AUTO=update \
              -e SPRING_PROFILES_ACTIVE=prod \
              ${{ secrets.DOCKERHUB_USERNAME }}/LaBoticaDeMar:${{ steps.extract_version.outputs.version }}
          EOF
